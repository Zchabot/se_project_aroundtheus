!function(){"use strict";class e{constructor(e,t,s,i,r){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this._id=a,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteCard=i,this._handleLikes=r,this._isLiked=l}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeIcon),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteCard(this._cardElement)})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleImageClick(this._cardImageEl.src,this._cardImageEl.alt,this._cardTitleEl.textContent)}))}_handleLikeIcon=()=>{this._handleLikes(this._isLiked,this._id,this._likeButton,this)};_isLiked(){return this._isLiked}_renderLikes(e){this._isLiked?e.classList.add("cards__like-button_active"):e.classList.remove("cards__like-button_active")}setIsLiked(e,t,s){this._isLiked=e,this._renderLikes(t),s._isLiked=e}deleteCard(e){e.remove(),e=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".cards__like-button"),this._cardImageEl=this._cardElement.querySelector(".cards__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__image-title"),this._setEventListeners(),this._renderLikes(this._likeButton),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardElement.id=this._id,this._cardElement}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputElements=[...this._formElement.querySelectorAll(this._settings.inputSelector)],this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetFormValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),this._setEventListeners()}close(){this._popupElement.classList.remove("modal_opened"),this._removeEventListeners()}_setEventListeners(){document.addEventListener("keydown",this.handleEscClose),this._popupElement.addEventListener("mousedown",this.handleClickOverlay),this._closeButton.addEventListener("mousedown",this.handleCloseButton)}_removeEventListeners(){document.removeEventListener("keydown",this.handleEscClose),this._popupElement.removeEventListener("mousedown",this.handleClickOverlay),this._closeButton.removeEventListener("mousedown",this.handleCloseButton)}handleEscClose=e=>{"Escape"===e.key&&this.close()};handleClickOverlay=e=>{e.target.classList.contains("modal")&&this.close()};handleCloseButton=()=>{this.close()}}class i extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputFields=[...this._popupElement.querySelectorAll(".modal__input")],this._submitButton=this._popupForm.querySelector(".modal__button")}_getInputValues(){const e={};return this._inputFields.forEach((t=>{e[t.name]=t.value})),e}open(){super.open(),this._popupForm.addEventListener("submit",this.handleSubmitListener)}close(){super.close(),this._popupForm.removeEventListener("submit",this.handleSubmitListener)}handleSubmitListener=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())};renderLoading(){this._submitButton.textContent="Saving..."}resetButton(e){this._submitButton.textContent=e}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},n=document.querySelector(".profile__edit-button"),o=document.querySelector("[name='name']"),a=document.querySelector("[name='title']"),l=document.forms["profile-form"],d=document.querySelector(".profile__add-button"),h=document.forms["add-card-form"],c=document.querySelector(".profile__image"),_=document.forms["profile-picture-form"];document.querySelector("#delete-card-modal").querySelector(".modal__form");const u=new class{constructor(e){this._options=e}_processResponse=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`);getInitialCards(){return fetch(`${this._options.baseUrl}/cards`,{headers:this._options.headers}).then(this._processResponse)}getUserInfo(){return fetch(`${this._options.baseUrl}/users/me`,{headers:this._options.headers}).then(this._processResponse)}saveUserData(e){let{name:t,about:s}=e;return fetch(`${this._options.baseUrl}/users/me`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:t,about:s})}).then(this._processResponse)}saveUserImage(e){let{avatar:t}=e;return fetch(`${this._options.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({avatar:t})}).then(this._processResponse)}addNewCard(e,t){return fetch(`${this._options.baseUrl}/cards`,{method:"POST",headers:this._options.headers,body:JSON.stringify({name:e,link:t})}).then(this._processResponse)}deleteCard(e){return fetch(`${this._options.baseUrl}/cards/${e}`,{method:"DELETE",headers:this._options.headers}).then(this._processResponse)}addLike(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._options.headers}).then(this._processResponse)}deleteLike(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._options.headers}).then(this._processResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"cb2e37e6-748b-43dc-a993-c3836c3f06a0","Content-Type":"application/json"}});u.getInitialCards().then((e=>{p.renderItems(e)})).catch((e=>{console.error(e)})),u.getUserInfo().then((e=>{m.setUserInfo(e.name,e.about),m.setAvatar(e.avatar)})).catch((e=>{console.error(e)}));const m=new class{constructor(e){let{profileName:t,profileTitle:s,profileImage:i}=e;this._profileName=document.querySelector(t),this._profileTitle=document.querySelector(s),this._profilePicture=document.querySelector(i)}getUserInfo(){return this._profileInfo={name:this._profileName.textContent,title:this._profileTitle.textContent,avatar:this._profilePicture.src},this._profileInfo}setUserInfo(e,t){this._profileName.textContent=e,this._profileTitle.textContent=t}setAvatar(e){this._profilePicture.src=e}}({profileName:".profile__title",profileTitle:".profile__subtitle",profileImage:".profile__image"}),p=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{const t=this._renderer(e);this._container.append(t)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:t=>new e(t,"#cards__card",I,C,B).getView()},".cards"),E=new e({},"#cards__card",I,C,B),f=new t(r,h),v=new t(r,l),L=new t(r,_);f.enableValidation(),v.enableValidation(),L.enableValidation();const b=new i("#add-card-modal",(e=>{b.renderLoading(),u.addNewCard(e.title,e.url).then((e=>p.addItem(e))).then((()=>{h.reset(),f.resetFormValidation(),b.close()})).catch((e=>{console.error(e)})).finally((()=>b.resetButton("Create")))})),S=new i("#profile-edit-modal",(e=>{S.renderLoading(),u.saveUserData({name:e.name,about:e.title}).then((()=>u.getUserInfo())).then((e=>{m.setUserInfo(e.name,e.about),l.reset(),S.close()})).catch((e=>{console.error(e)})).finally((()=>S.resetButton("Save")))})),g=new i("#profile-picture-modal",(e=>{g.renderLoading(),u.saveUserImage({avatar:e.url}).then((()=>u.getUserInfo())).then((e=>{m.setAvatar(e.avatar),_.reset(),L.resetFormValidation(),g.close()})).catch((e=>{console.error(e)})).finally((()=>g.resetButton("Save")))})),k=new class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupForm.querySelector(".modal__button")}open(e){super.open(),this._popupForm.addEventListener("submit",this.handleSubmitListener),this._element=e}close(){super.close(),this._popupForm.removeEventListener("submit",this.handleSubmitListener)}handleSubmitListener=e=>{e.preventDefault(),this._handleFormSubmit(this._element)};renderLoading(){this._submitButton.textContent="Removing Card..."}resetButton(){this._submitButton.textContent="Yes"}}("#delete-card-modal",(e=>{k.renderLoading(),u.deleteCard(e.id).then((()=>{E.deleteCard(e),k.close()})).catch((e=>{console.error(e)})).finally((()=>k.resetButton()))})),y=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__open-picture"),this._imageTitle=this._popupElement.querySelector(".modal__footer")}open(e,t,s){this._image.src=e,this._image.alt=t,this._imageTitle.textContent=s,super.open()}}("#open-picture-modal");function C(e){k.open(e)}function I(e,t,s){y.open(e,t,s)}function B(e,t,s,i){e?u.deleteLike(t).then((e=>{E.setIsLiked(e.isLiked,s,i)})).catch((e=>{console.error(e)})):u.addLike(t).then((e=>{E.setIsLiked(e.isLiked,s,i)})).catch((e=>{console.error(e)}))}n.addEventListener("click",(()=>{!function(){const e=m.getUserInfo();o.value=e.name,a.value=e.title}(),v.resetFormValidation(),S.open()})),d.addEventListener("click",(()=>b.open())),c.addEventListener("click",(()=>g.open()))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S0MsRUFBS3dJLEdBQ2xDeUIsRUFBVzVHLEtBQUt0RCxFQUFLQyxFQUFLd0ksRUFDNUIsQ0FRQSxTQUFTN0osRUFBWUksRUFBU2lDLEVBQUlaLEVBQVlLLEdBQ3hDMUIsRUFDRjBHLEVBQ0cyQixXQUFXcEcsR0FDWHVGLE1BQU1zQixJQUNMdUIsRUFBSzVJLFdBQVdxSCxFQUFPOUksUUFBU3FCLEVBQVlLLEVBQUssSUFFbERnSCxPQUFPQyxJQUNOQyxRQUFRQyxNQUFNRixFQUFJLElBR3RCakMsRUFDRzBCLFFBQVFuRyxHQUNSdUYsTUFBTXNCLElBQ0x1QixFQUFLNUksV0FBV3FILEVBQU85SSxRQUFTcUIsRUFBWUssRUFBSyxJQUVsRGdILE9BQU9DLElBQ05DLFFBQVFDLE1BQU1GLEVBQUksR0FHMUIsQ0FJQTFDLEVBQWtCdEYsaUJBQWlCLFNBQVMsTUE5QjVDLFdBQ0UsTUFBTTBLLEVBQWN0QyxFQUFnQnRCLGNBQ3BDdkIsRUFBa0JSLE1BQVEyRixFQUFZeEwsS0FDdENzRyxFQUFxQlQsTUFBUTJGLEVBQVk1QixLQUMzQyxDQTJCRTZCLEdBQ0FmLEVBQXFCeEcsc0JBQ3JCK0csRUFBYXhHLE1BQU0sSUFHckJnQyxFQUFjM0YsaUJBQWlCLFNBQVMsSUFBTThKLEVBQWFuRyxTQUUzRGtDLEVBQXNCN0YsaUJBQWlCLFNBQVMsSUFDOUNvSyxFQUFvQnpHLFEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBEZWxldGVDYXJkLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgeyBuYW1lLCBsaW5rLCBfaWQsIGlzTGlrZWQgfSxcbiAgICBjYXJkU2VsZWN0b3IsXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcbiAgICBoYW5kbGVEZWxldGVDYXJkLFxuICAgIGhhbmRsZUxpa2VzXG4gICkge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBsaW5rO1xuICAgIHRoaXMuX2lkID0gX2lkO1xuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkID0gaGFuZGxlRGVsZXRlQ2FyZDtcbiAgICB0aGlzLl9oYW5kbGVMaWtlcyA9IGhhbmRsZUxpa2VzO1xuICAgIHRoaXMuX2lzTGlrZWQgPSBpc0xpa2VkO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8vIExpa2UgQnV0dG9uXG5cbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVMaWtlSWNvbik7XG5cbiAgICAvLyBEZWxldGUgQnV0dG9uXG5cbiAgICB0aGlzLl9jYXJkRWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2RlbGV0ZS1idXR0b25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKHRoaXMuX2NhcmRFbGVtZW50KTtcbiAgICAgIH0pO1xuXG4gICAgLy8gSW1hZ2VcblxuICAgIHRoaXMuX2NhcmRFbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkc19faW1hZ2VcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKFxuICAgICAgICAgIHRoaXMuX2NhcmRJbWFnZUVsLnNyYyxcbiAgICAgICAgICB0aGlzLl9jYXJkSW1hZ2VFbC5hbHQsXG4gICAgICAgICAgdGhpcy5fY2FyZFRpdGxlRWwudGV4dENvbnRlbnRcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgX2hhbmRsZUxpa2VJY29uID0gKCkgPT4ge1xuICAgIHRoaXMuX2hhbmRsZUxpa2VzKHRoaXMuX2lzTGlrZWQsIHRoaXMuX2lkLCB0aGlzLl9saWtlQnV0dG9uLCB0aGlzKTtcbiAgfTtcblxuICBfaXNMaWtlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faXNMaWtlZDtcbiAgfVxuXG4gIF9yZW5kZXJMaWtlcyhsaWtlQnV0dG9uKSB7XG4gICAgaWYgKHRoaXMuX2lzTGlrZWQpIHtcbiAgICAgIGxpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhcmRzX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRzX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgfVxuICB9XG5cbiAgc2V0SXNMaWtlZChpc0xpa2VkLCBsaWtlQnV0dG9uLCBpdGVtKSB7XG4gICAgdGhpcy5faXNMaWtlZCA9IGlzTGlrZWQ7XG4gICAgdGhpcy5fcmVuZGVyTGlrZXMobGlrZUJ1dHRvbik7XG4gICAgaXRlbS5faXNMaWtlZCA9IGlzTGlrZWQ7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRFbGVtZW50KSB7XG4gICAgY2FyZEVsZW1lbnQucmVtb3ZlKCk7XG4gICAgY2FyZEVsZW1lbnQgPSBudWxsO1xuICB9XG5cbiAgZ2V0VmlldygpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19jYXJkXCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpa2UtYnV0dG9uXCIpO1xuICAgIHRoaXMuX2NhcmRJbWFnZUVsID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19faW1hZ2VcIik7XG4gICAgdGhpcy5fY2FyZFRpdGxlRWwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19pbWFnZS10aXRsZVwiKTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fcmVuZGVyTGlrZXModGhpcy5fbGlrZUJ1dHRvbik7XG4gICAgdGhpcy5fY2FyZFRpdGxlRWwudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2NhcmRJbWFnZUVsLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fY2FyZEltYWdlRWwuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5pZCA9IHRoaXMuX2lkO1xuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX3NldHRpbmdzID0gc2V0dGluZ3M7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gW1xuICAgICAgLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZXR0aW5ncy5pbnB1dFNlbGVjdG9yKSxcbiAgICBdO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbCkge1xuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAjJHtpbnB1dEVsLmlkfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgIyR7aW5wdXRFbC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xuICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xuICAgIH1cbiAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XG4gICAgcmV0dXJuICF0aGlzLl9pbnB1dEVsZW1lbnRzLmV2ZXJ5KChpbnB1dEVsKSA9PiBpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKTtcbiAgfVxuXG4gIF9lbmFibGVCdXR0b24oKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cblxuICBfZGlzYWJsZUJ1dHRvbigpIHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICB9XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5fZGlzYWJsZUJ1dHRvbigpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLl9lbmFibGVCdXR0b24oKTtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goKGlucHV0RWwpID0+IHtcbiAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChldnQpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXNldEZvcm1WYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciB9KSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIHRoaXMuX3JlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5oYW5kbGVFc2NDbG9zZSk7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5oYW5kbGVDbGlja092ZXJsYXkpO1xuICAgIHRoaXMuX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5oYW5kbGVDbG9zZUJ1dHRvbik7XG4gIH1cblxuICBfcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5oYW5kbGVFc2NDbG9zZSk7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXG4gICAgICBcIm1vdXNlZG93blwiLFxuICAgICAgdGhpcy5oYW5kbGVDbGlja092ZXJsYXlcbiAgICApO1xuICAgIHRoaXMuX2Nsb3NlQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5oYW5kbGVDbG9zZUJ1dHRvbik7XG4gIH1cblxuICBoYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfTtcblxuICBoYW5kbGVDbGlja092ZXJsYXkgPSAoZXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsXCIpKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9O1xuXG4gIGhhbmRsZUNsb3NlQnV0dG9uID0gKCkgPT4ge1xuICAgIHRoaXMuY2xvc2UoKTtcbiAgfTtcbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICAgIHRoaXMuX2lucHV0RmllbGRzID0gW1xuICAgICAgLi4udGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpLFxuICAgIF07XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xuXG4gICAgdGhpcy5faW5wdXRGaWVsZHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLmhhbmRsZVN1Ym1pdExpc3RlbmVyKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgdGhpcy5oYW5kbGVTdWJtaXRMaXN0ZW5lcik7XG4gIH1cblxuICBoYW5kbGVTdWJtaXRMaXN0ZW5lciA9IChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICB9O1xuXG4gIHJlbmRlckxvYWRpbmcoKSB7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZpbmcuLi5cIjtcbiAgfVxuXG4gIHJlc2V0QnV0dG9uKHRleHQpIHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xuICB9XG59XG4iLCIvLyBFbGVtZW50cyAvL1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbn07XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiXG4pO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVNb2RhbFRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltuYW1lPSduYW1lJ11cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZU1vZGFsU3VidGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW25hbWU9J3RpdGxlJ11cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZm9ybXNbXCJwcm9maWxlLWZvcm1cIl07XG5cbmV4cG9ydCBjb25zdCBhZGRDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IGFkZENhcmRGb3JtRWxlbWVudCA9IGRvY3VtZW50LmZvcm1zW1wiYWRkLWNhcmQtZm9ybVwiXTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVQaWN0dXJlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZVBpY3R1cmVGb3JtRWxlbWVudCA9IGRvY3VtZW50LmZvcm1zW1wicHJvZmlsZS1waWN0dXJlLWZvcm1cIl07XG5cbmNvbnN0IGRlbGV0ZUNhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLWNhcmQtbW9kYWxcIik7XG5leHBvcnQgY29uc3QgZGVsZXRlQ2FyZEZvcm1FbGVtZW50ID1cbiAgZGVsZXRlQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHtcbiAgY29uZmlnLFxuICBwcm9maWxlRWRpdEJ1dHRvbixcbiAgcHJvZmlsZU1vZGFsVGl0bGUsXG4gIHByb2ZpbGVNb2RhbFN1YnRpdGxlLFxuICBwcm9maWxlRm9ybUVsZW1lbnQsXG4gIGFkZENhcmRCdXR0b24sXG4gIGFkZENhcmRGb3JtRWxlbWVudCxcbiAgcHJvZmlsZVBpY3R1cmVFbGVtZW50LFxuICBwcm9maWxlUGljdHVyZUZvcm1FbGVtZW50LFxuICBkZWxldGVDYXJkRm9ybUVsZW1lbnQsXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuaW1wb3J0IFBvcHVwQ29uZmlybURlbGV0ZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cERlbGV0ZUNhcmQuanNcIjtcblxuLy8gQXBpIC8vXG5cbmV4cG9ydCBjb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogXCJjYjJlMzdlNi03NDhiLTQzZGMtYTk5My1jMzgzNmMzZjA2YTBcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgfSxcbn0pO1xuXG5hcGlcbiAgLmdldEluaXRpYWxDYXJkcygpXG4gIC50aGVuKChyZXN1bHRzKSA9PiB7XG4gICAgY2FyZExpc3QucmVuZGVySXRlbXMocmVzdWx0cyk7XG4gIH0pXG5cbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH0pO1xuXG5hcGlcbiAgLmdldFVzZXJJbmZvKClcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgIHVzZXJJbmZvcm1hdGlvbi5zZXRVc2VySW5mbyhyZXN1bHQubmFtZSwgcmVzdWx0LmFib3V0KTtcbiAgICB1c2VySW5mb3JtYXRpb24uc2V0QXZhdGFyKHJlc3VsdC5hdmF0YXIpO1xuICB9KVxuICAuY2F0Y2goKGVycikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfSk7XG5cbi8vIFVzZXJJbmZvIC8vXG5cbmV4cG9ydCBjb25zdCB1c2VySW5mb3JtYXRpb24gPSBuZXcgVXNlckluZm8oe1xuICBwcm9maWxlTmFtZTogXCIucHJvZmlsZV9fdGl0bGVcIixcbiAgcHJvZmlsZVRpdGxlOiBcIi5wcm9maWxlX19zdWJ0aXRsZVwiLFxuICBwcm9maWxlSW1hZ2U6IFwiLnByb2ZpbGVfX2ltYWdlXCIsXG59KTtcblxuLy8gU2VjdGlvbiAvL1xuXG5leHBvcnQgY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIHJlbmRlcmVyOiAoY2FyZEl0ZW0pID0+IHtcbiAgICAgIHJldHVybiBuZXcgQ2FyZChcbiAgICAgICAgY2FyZEl0ZW0sXG4gICAgICAgIFwiI2NhcmRzX19jYXJkXCIsXG4gICAgICAgIGhhbmRsZUltYWdlQ2xpY2ssXG4gICAgICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxuICAgICAgICBoYW5kbGVMaWtlc1xuICAgICAgKS5nZXRWaWV3KCk7XG4gICAgfSxcbiAgfSxcbiAgXCIuY2FyZHNcIlxuKTtcblxuY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxuICB7fSxcbiAgXCIjY2FyZHNfX2NhcmRcIixcbiAgaGFuZGxlSW1hZ2VDbGljayxcbiAgaGFuZGxlRGVsZXRlQ2xpY2ssXG4gIGhhbmRsZUxpa2VzXG4pO1xuXG4vLyBGb3JtIFZhbGlkYXRpb24gLy9cblxuY29uc3QgYWRkQ2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGFkZENhcmRGb3JtRWxlbWVudCk7XG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgcHJvZmlsZUZvcm1FbGVtZW50KTtcbmNvbnN0IHByb2ZpbGVQaWN0dXJlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxuICBjb25maWcsXG4gIHByb2ZpbGVQaWN0dXJlRm9ybUVsZW1lbnRcbik7XG5cbmFkZENhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbnByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbnByb2ZpbGVQaWN0dXJlRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbi8vIFBvcHVwIFdpdGggRm9ybSAvL1xuXG5jb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNhZGQtY2FyZC1tb2RhbFwiLCAoaW5wdXREYXRhKSA9PiB7XG4gIG5ld0NhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKCk7XG4gIGFwaVxuICAgIC5hZGROZXdDYXJkKGlucHV0RGF0YS50aXRsZSwgaW5wdXREYXRhLnVybClcbiAgICAudGhlbigocmVzdWx0KSA9PiBjYXJkTGlzdC5hZGRJdGVtKHJlc3VsdCkpXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgYWRkQ2FyZEZvcm1FbGVtZW50LnJlc2V0KCk7XG4gICAgICBhZGRDYXJkRm9ybVZhbGlkYXRvci5yZXNldEZvcm1WYWxpZGF0aW9uKCk7XG4gICAgICBuZXdDYXJkUG9wdXAuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiBuZXdDYXJkUG9wdXAucmVzZXRCdXR0b24oXCJDcmVhdGVcIikpO1xufSk7XG5cbmNvbnN0IHByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLCAoaW5wdXREYXRhKSA9PiB7XG4gIHByb2ZpbGVQb3B1cC5yZW5kZXJMb2FkaW5nKCk7XG4gIGFwaVxuICAgIC5zYXZlVXNlckRhdGEoeyBuYW1lOiBpbnB1dERhdGEubmFtZSwgYWJvdXQ6IGlucHV0RGF0YS50aXRsZSB9KVxuICAgIC50aGVuKCgpID0+IGFwaS5nZXRVc2VySW5mbygpKVxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgIHVzZXJJbmZvcm1hdGlvbi5zZXRVc2VySW5mbyhyZXN1bHQubmFtZSwgcmVzdWx0LmFib3V0KTtcbiAgICAgIHByb2ZpbGVGb3JtRWxlbWVudC5yZXNldCgpO1xuICAgICAgcHJvZmlsZVBvcHVwLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH0pXG4gICAgLmZpbmFsbHkoKCkgPT4gcHJvZmlsZVBvcHVwLnJlc2V0QnV0dG9uKFwiU2F2ZVwiKSk7XG59KTtcblxuY29uc3QgcHJvZmlsZVBpY3R1cmVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBcIiNwcm9maWxlLXBpY3R1cmUtbW9kYWxcIixcbiAgKGlucHV0RGF0YSkgPT4ge1xuICAgIHByb2ZpbGVQaWN0dXJlUG9wdXAucmVuZGVyTG9hZGluZygpO1xuICAgIGFwaVxuICAgICAgLnNhdmVVc2VySW1hZ2UoeyBhdmF0YXI6IGlucHV0RGF0YS51cmwgfSlcbiAgICAgIC50aGVuKCgpID0+IGFwaS5nZXRVc2VySW5mbygpKVxuICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICB1c2VySW5mb3JtYXRpb24uc2V0QXZhdGFyKHJlc3VsdC5hdmF0YXIpO1xuICAgICAgICBwcm9maWxlUGljdHVyZUZvcm1FbGVtZW50LnJlc2V0KCk7XG4gICAgICAgIHByb2ZpbGVQaWN0dXJlRm9ybVZhbGlkYXRvci5yZXNldEZvcm1WYWxpZGF0aW9uKCk7XG4gICAgICAgIHByb2ZpbGVQaWN0dXJlUG9wdXAuY2xvc2UoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoKCkgPT4gcHJvZmlsZVBpY3R1cmVQb3B1cC5yZXNldEJ1dHRvbihcIlNhdmVcIikpO1xuICB9XG4pO1xuXG5leHBvcnQgY29uc3QgZGVsZXRlUG9wdXAgPSBuZXcgUG9wdXBDb25maXJtRGVsZXRlKFxuICBcIiNkZWxldGUtY2FyZC1tb2RhbFwiLFxuICAoZWxlbWVudCkgPT4ge1xuICAgIGRlbGV0ZVBvcHVwLnJlbmRlckxvYWRpbmcoKTtcbiAgICBhcGlcbiAgICAgIC5kZWxldGVDYXJkKGVsZW1lbnQuaWQpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGNhcmQuZGVsZXRlQ2FyZChlbGVtZW50KTtcbiAgICAgICAgZGVsZXRlUG9wdXAuY2xvc2UoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoKCkgPT4gZGVsZXRlUG9wdXAucmVzZXRCdXR0b24oKSk7XG4gIH1cbik7XG5cbi8vIFBvcHVwIFdpdGggSW1hZ2UgLy9cblxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNvcGVuLXBpY3R1cmUtbW9kYWxcIik7XG5cbi8vIEZ1bmN0aW9ucyAvL1xuXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDbGljayhjYXJkRWxlbWVudCkge1xuICBkZWxldGVQb3B1cC5vcGVuKGNhcmRFbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlSW1hZ2VDbGljayhzcmMsIGFsdCwgdGl0bGUpIHtcbiAgaW1hZ2VQb3B1cC5vcGVuKHNyYywgYWx0LCB0aXRsZSk7XG59XG5cbmZ1bmN0aW9uIGZpbGxQcm9maWxlRm9ybSgpIHtcbiAgY29uc3QgcHJvZmlsZUluZm8gPSB1c2VySW5mb3JtYXRpb24uZ2V0VXNlckluZm8oKTtcbiAgcHJvZmlsZU1vZGFsVGl0bGUudmFsdWUgPSBwcm9maWxlSW5mby5uYW1lO1xuICBwcm9maWxlTW9kYWxTdWJ0aXRsZS52YWx1ZSA9IHByb2ZpbGVJbmZvLnRpdGxlO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVMaWtlcyhpc0xpa2VkLCBpZCwgbGlrZUJ1dHRvbiwgaXRlbSkge1xuICBpZiAoaXNMaWtlZCkge1xuICAgIGFwaVxuICAgICAgLmRlbGV0ZUxpa2UoaWQpXG4gICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgIGNhcmQuc2V0SXNMaWtlZChyZXN1bHQuaXNMaWtlZCwgbGlrZUJ1dHRvbiwgaXRlbSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgYXBpXG4gICAgICAuYWRkTGlrZShpZClcbiAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgY2FyZC5zZXRJc0xpa2VkKHJlc3VsdC5pc0xpa2VkLCBsaWtlQnV0dG9uLCBpdGVtKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICB9KTtcbiAgfVxufVxuXG4vLyBFdmVudCBMaXN0ZW5lcnMgLy9cblxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZmlsbFByb2ZpbGVGb3JtKCk7XG4gIHByb2ZpbGVGb3JtVmFsaWRhdG9yLnJlc2V0Rm9ybVZhbGlkYXRpb24oKTtcbiAgcHJvZmlsZVBvcHVwLm9wZW4oKTtcbn0pO1xuXG5hZGRDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBuZXdDYXJkUG9wdXAub3BlbigpKTtcblxucHJvZmlsZVBpY3R1cmVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICBwcm9maWxlUGljdHVyZVBvcHVwLm9wZW4oKVxuKTtcbiIsImltcG9ydCB7IGNhcmRMaXN0LCB1c2VySW5mb3JtYXRpb24gfSBmcm9tIFwiLi4vcGFnZXMvaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuX29wdGlvbnMgPSBvcHRpb25zO1xuICB9XG5cbiAgX3Byb2Nlc3NSZXNwb25zZSA9IChyZXMpID0+IHtcbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICB9O1xuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fb3B0aW9ucy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX3Byb2Nlc3NSZXNwb25zZSk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fb3B0aW9ucy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX3Byb2Nlc3NSZXNwb25zZSk7XG4gIH1cblxuICBzYXZlVXNlckRhdGEoeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX29wdGlvbnMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgYWJvdXQ6IGFib3V0LFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9wcm9jZXNzUmVzcG9uc2UpO1xuICB9XG5cbiAgc2F2ZVVzZXJJbWFnZSh7IGF2YXRhciB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX29wdGlvbnMuYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9vcHRpb25zLmhlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogYXZhdGFyLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9wcm9jZXNzUmVzcG9uc2UpO1xuICB9XG5cbiAgYWRkTmV3Q2FyZChuYW1lLCBsaW5rKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX29wdGlvbnMuYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5fb3B0aW9ucy5oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICBsaW5rOiBsaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9wcm9jZXNzUmVzcG9uc2UpO1xuICB9XG5cbiAgZGVsZXRlQ2FyZChpZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9vcHRpb25zLmJhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5fb3B0aW9ucy5oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fcHJvY2Vzc1Jlc3BvbnNlKTtcbiAgfVxuXG4gIGFkZExpa2UoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fb3B0aW9ucy5iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX3Byb2Nlc3NSZXNwb25zZSk7XG4gIH1cblxuICBkZWxldGVMaWtlKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX29wdGlvbnMuYmFzZVVybH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9vcHRpb25zLmhlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9wcm9jZXNzUmVzcG9uc2UpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBhcGkgfSBmcm9tIFwiLi4vcGFnZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IHByb2ZpbGVOYW1lLCBwcm9maWxlVGl0bGUsIHByb2ZpbGVJbWFnZSB9KSB7XG4gICAgdGhpcy5fcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVOYW1lKTtcbiAgICB0aGlzLl9wcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVUaXRsZSk7XG4gICAgdGhpcy5fcHJvZmlsZVBpY3R1cmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVJbWFnZSk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICB0aGlzLl9wcm9maWxlSW5mbyA9IHtcbiAgICAgIG5hbWU6IHRoaXMuX3Byb2ZpbGVOYW1lLnRleHRDb250ZW50LFxuICAgICAgdGl0bGU6IHRoaXMuX3Byb2ZpbGVUaXRsZS50ZXh0Q29udGVudCxcbiAgICAgIGF2YXRhcjogdGhpcy5fcHJvZmlsZVBpY3R1cmUuc3JjLFxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMuX3Byb2ZpbGVJbmZvO1xuICB9XG5cbiAgc2V0VXNlckluZm8obmFtZSwgdGl0bGUpIHtcbiAgICB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5fcHJvZmlsZVRpdGxlLnRleHRDb250ZW50ID0gdGl0bGU7XG4gIH1cblxuICBzZXRBdmF0YXIoYXZhdGFyKSB7XG4gICAgdGhpcy5fcHJvZmlsZVBpY3R1cmUuc3JjID0gYXZhdGFyO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBpdGVtQ29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaXRlbUNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZEl0ZW0oaXRlbSkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwQ29uZmlybURlbGV0ZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xuICB9XG5cbiAgb3BlbihlbGVtZW50KSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuaGFuZGxlU3VibWl0TGlzdGVuZXIpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9wb3B1cEZvcm0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLmhhbmRsZVN1Ym1pdExpc3RlbmVyKTtcbiAgfVxuXG4gIGhhbmRsZVN1Ym1pdExpc3RlbmVyID0gKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZWxlbWVudCk7XG4gIH07XG5cbiAgcmVuZGVyTG9hZGluZygpIHtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlJlbW92aW5nIENhcmQuLi5cIjtcbiAgfVxuXG4gIHJlc2V0QnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiWWVzXCI7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19vcGVuLXBpY3R1cmVcIik7XG4gICAgdGhpcy5faW1hZ2VUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb290ZXJcIik7XG4gIH1cblxuICBvcGVuKHNyYywgYWx0LCB0aXRsZSkge1xuICAgIHRoaXMuX2ltYWdlLnNyYyA9IHNyYztcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBhbHQ7XG4gICAgdGhpcy5faW1hZ2VUaXRsZS50ZXh0Q29udGVudCA9IHRpdGxlO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsIl9yZWYiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2FyZCIsImhhbmRsZUxpa2VzIiwibmFtZSIsImxpbmsiLCJfaWQiLCJpc0xpa2VkIiwidGhpcyIsIl9uYW1lIiwiX2xpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9oYW5kbGVMaWtlcyIsIl9pc0xpa2VkIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2xpa2VCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUxpa2VJY29uIiwiX2NhcmRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsIl9jYXJkSW1hZ2VFbCIsInNyYyIsImFsdCIsIl9jYXJkVGl0bGVFbCIsInRleHRDb250ZW50IiwiX3JlbmRlckxpa2VzIiwibGlrZUJ1dHRvbiIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInNldElzTGlrZWQiLCJpdGVtIiwiZGVsZXRlQ2FyZCIsImNhcmRFbGVtZW50IiwiZ2V0VmlldyIsImRvY3VtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsImlkIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfc2V0dGluZ3MiLCJfZm9ybUVsZW1lbnQiLCJfaW5wdXRFbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRFbCIsImVycm9yTWVzc2FnZUVsIiwiaW5wdXRFcnJvckNsYXNzIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvckNsYXNzIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGFzSW52YWxpZElucHV0IiwiZXZlcnkiLCJfZW5hYmxlQnV0dG9uIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImRpc2FibGVkIiwiX2Rpc2FibGVCdXR0b24iLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiZXZ0IiwicmVzZXRGb3JtVmFsaWRhdGlvbiIsImVuYWJsZVZhbGlkYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfY2xvc2VCdXR0b24iLCJvcGVuIiwiY2xvc2UiLCJfcmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJoYW5kbGVFc2NDbG9zZSIsImhhbmRsZUNsaWNrT3ZlcmxheSIsImhhbmRsZUNsb3NlQnV0dG9uIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsImV2ZW50IiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX3BvcHVwRm9ybSIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2lucHV0RmllbGRzIiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiaGFuZGxlU3VibWl0TGlzdGVuZXIiLCJyZW5kZXJMb2FkaW5nIiwicmVzZXRCdXR0b24iLCJ0ZXh0IiwiY29uZmlnIiwiZm9ybVNlbGVjdG9yIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlTW9kYWxUaXRsZSIsInByb2ZpbGVNb2RhbFN1YnRpdGxlIiwicHJvZmlsZUZvcm1FbGVtZW50IiwiZm9ybXMiLCJhZGRDYXJkQnV0dG9uIiwiYWRkQ2FyZEZvcm1FbGVtZW50IiwicHJvZmlsZVBpY3R1cmVFbGVtZW50IiwicHJvZmlsZVBpY3R1cmVGb3JtRWxlbWVudCIsImFwaSIsIm9wdGlvbnMiLCJfb3B0aW9ucyIsIl9wcm9jZXNzUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJiYXNlVXJsIiwiaGVhZGVycyIsInRoZW4iLCJnZXRVc2VySW5mbyIsInNhdmVVc2VyRGF0YSIsImFib3V0IiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzYXZlVXNlckltYWdlIiwiX3JlZjIiLCJhdmF0YXIiLCJhZGROZXdDYXJkIiwiYWRkTGlrZSIsImRlbGV0ZUxpa2UiLCJhdXRob3JpemF0aW9uIiwicmVzdWx0cyIsImNhcmRMaXN0IiwicmVuZGVySXRlbXMiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInJlc3VsdCIsInVzZXJJbmZvcm1hdGlvbiIsInNldFVzZXJJbmZvIiwic2V0QXZhdGFyIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlVGl0bGUiLCJwcm9maWxlSW1hZ2UiLCJfcHJvZmlsZU5hbWUiLCJfcHJvZmlsZVRpdGxlIiwiX3Byb2ZpbGVQaWN0dXJlIiwiX3Byb2ZpbGVJbmZvIiwidGl0bGUiLCJpdGVtQ29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtcyIsImVsZW1lbnQiLCJhcHBlbmQiLCJhZGRJdGVtIiwicHJlcGVuZCIsImNhcmRJdGVtIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJjYXJkIiwiYWRkQ2FyZEZvcm1WYWxpZGF0b3IiLCJwcm9maWxlRm9ybVZhbGlkYXRvciIsInByb2ZpbGVQaWN0dXJlRm9ybVZhbGlkYXRvciIsIm5ld0NhcmRQb3B1cCIsImlucHV0RGF0YSIsInVybCIsInJlc2V0IiwiZmluYWxseSIsInByb2ZpbGVQb3B1cCIsInByb2ZpbGVQaWN0dXJlUG9wdXAiLCJkZWxldGVQb3B1cCIsIl9lbGVtZW50IiwiaW1hZ2VQb3B1cCIsIl9pbWFnZSIsIl9pbWFnZVRpdGxlIiwicHJvZmlsZUluZm8iLCJmaWxsUHJvZmlsZUZvcm0iXSwic291cmNlUm9vdCI6IiJ9