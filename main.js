!function(){"use strict";var e={d:function(t,s){for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{hi:function(){return m},le:function(){return f},is:function(){return p}});class t{constructor(e,t,s,i){let{name:n,link:r,_id:o,isLiked:a}=e;this._name=n,this._link=r,this._id=o,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteCard=i,this._isLiked=a}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeIcon),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteCard(this._cardElement)})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleImageClick(this._cardImageEl.src,this._cardImageEl.alt,this._cardTitleEl.textContent)}))}_handleLikeIcon=()=>{this._likeButton.classList.toggle("cards__like-button_active"),this._likeButton.classList.contains("cards__like-button_active")?m.addLike(this._id):m.deleteLike(this._id)};_getIsLiked(){!0===this._isLiked?this._likeButton.classList.add("cards__like-button_active"):this._likeButton.classList.remove("cards__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".cards__like-button"),this._cardImageEl=this._cardElement.querySelector(".cards__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__image-title"),this._setEventListeners(),this._getIsLiked(),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardElement.id=this._id,this._cardElement}}class s{constructor(e,t){this._settings=e,this._formElement=t,this._inputElements=[...this._formElement.querySelectorAll(this._settings.inputSelector)],this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetFormValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class i{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),this._setEventListeners()}close(){this._popupElement.classList.remove("modal_opened"),this._removeEventListeners()}_setEventListeners(){document.addEventListener("keydown",this.handleEscClose),this._popupElement.addEventListener("mousedown",this.handleClickOverlay),this._closeButton.addEventListener("mousedown",this.handleCloseButton)}_removeEventListeners(){document.removeEventListener("keydown",this.handleEscClose),this._popupElement.removeEventListener("mousedown",this.handleClickOverlay),this._closeButton.removeEventListener("mousedown",this.handleCloseButton)}handleEscClose=e=>{"Escape"===e.key&&this.close()};handleClickOverlay=e=>{e.target.classList.contains("modal")&&this.close()};handleCloseButton=()=>{this.close()}}class n extends i{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputFields=[...this._popupElement.querySelectorAll(".modal__input")],this._submitButton=this._popupForm.querySelector(".modal__button")}_getInputValues(){const e={};return this._inputFields.forEach((t=>{e[t.name]=t.value})),e}open(){super.open(),this._popupForm.addEventListener("submit",this.handleSubmitListener)}close(){super.close(),this._popupForm.removeEventListener("submit",this.handleSubmitListener)}handleSubmitListener=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()).onload=this._loadingButtonCallback};_loadingButtonCallback(){this._submitButton.textContent="Saving..."}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector(".profile__edit-button"),a=document.querySelector("[name='name']"),l=document.querySelector("[name='title']"),d=document.forms["profile-form"],c=document.querySelector(".profile__add-button"),h=document.forms["add-card-form"],u=document.querySelector(".profile__image"),_=document.forms["profile-picture-form"],m=new class{constructor(e){this._options=e}getInitialCards(){return fetch(`${this._options.baseUrl}/cards`,{headers:this._options.headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{e.forEach((e=>{f.renderItems(e)}))})).catch((e=>{console.error(e)}))}getUserInfo(){return fetch(`${this._options.baseUrl}/users/me`,{headers:this._options.headers}).then((e=>e.json())).then((e=>{p.setUserInfo(e.name,e.about,e.avatar)})).catch((e=>{console.error(e)}))}saveUserData(e){let{name:t,about:s}=e;return fetch(`${this._options.baseUrl}/users/me`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:t,about:s})})}saveUserImage(e){let{avatar:t}=e;return fetch(`${this._options.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({avatar:t})})}addNewCard(e,t){return fetch(`${this._options.baseUrl}/cards`,{method:"POST",headers:this._options.headers,body:JSON.stringify({name:e,link:t})})}deleteCard(e){return fetch(`${this._options.baseUrl}/cards/${e}`,{method:"DELETE",headers:this._options.headers})}addLike(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._options.headers})}deleteLike(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._options.headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"cb2e37e6-748b-43dc-a993-c3836c3f06a0","Content-Type":"application/json"}});m.getInitialCards(),m.getUserInfo();const p=new class{constructor(e){let{profileName:t,profileTitle:s,profileImage:i}=e;this._profileName=document.querySelector(t),this._profileTitle=document.querySelector(s),this._profilePicture=document.querySelector(i)}getUserInfo(){return this._profileInfo={name:this._profileName.textContent,title:this._profileTitle.textContent,avatar:this._profilePicture.src},this._profileInfo}setUserInfo(e,t,s){this._profileName.textContent=e,this._profileTitle.textContent=t,this._profilePicture.src=s}}({profileName:".profile__title",profileTitle:".profile__subtitle",profileImage:".profile__image"}),f=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){const t=this._renderer(e);this._container.append(t)}}({renderer:e=>new t(e,"#cards__card",I,C).getView()},".cards"),E=new s(r,h),v=new s(r,d),b=new s(r,_);E.enableValidation(),v.enableValidation(),b.enableValidation();const g=new n("#add-card-modal",(e=>{B(h),m.addNewCard(e.title,e.url).then((()=>location.reload(!0))).then((()=>{h.reset(),E.resetFormValidation(),g.close(),q(h,"Create")}))})),S=new n("#profile-edit-modal",(e=>{B(d),m.saveUserData({name:e.name,about:e.title}).then((()=>m.getUserInfo())).then((()=>{d.reset(),S.close(),q(d,"Save")}))})),L=new n("#profile-picture-modal",(e=>{B(_),m.saveUserImage({avatar:e.url}).then((()=>m.getUserInfo())).then((()=>{_.reset(),b.resetFormValidation(),L.close(),q(_,"Save")}))})),y=new class extends i{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}open(e){super.open(),this._popupForm.addEventListener("submit",this.handleSubmitListener),this._element=e}close(){super.close(),this._popupForm.removeEventListener("submit",this.handleSubmitListener)}handleSubmitListener=e=>{e.preventDefault(),this._handleFormSubmit(this._element)}}("#delete-card-modal",(e=>{m.deleteCard(e.id),e.remove(),e=null,y.close()})),k=new class extends i{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__open-picture"),this._imageTitle=this._popupElement.querySelector(".modal__footer")}open(e,t,s){this._image.src=e,this._image.alt=t,this._imageTitle.textContent=s,super.open()}}("#open-picture-modal");function C(e){y.open(e)}function I(e,t,s){k.open(e,t,s)}function B(e){e.querySelector(".modal__button").textContent="Saving..."}function q(e,t){e.querySelector(".modal__button").textContent=t}o.addEventListener("click",(()=>{!function(){const e=p.getUserInfo();a.value=e.name,l.value=e.title}(),v.resetFormValidation(),S.open()})),c.addEventListener("click",(()=>g.open())),u.addEventListener("click",(()=>L.open()))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,