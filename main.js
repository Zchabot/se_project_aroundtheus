!function(){"use strict";class e{constructor(e,t,s,i,r){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this._id=a,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteCard=i,this._handleLikes=r,this._isLiked=l}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeIcon),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteCard(this._cardElement)})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleImageClick(this._cardImageEl.src,this._cardImageEl.alt,this._cardTitleEl.textContent)}))}_handleLikeIcon=()=>{this._handleLikes(this._isLiked,this._id,this._likeButton),this._isLiked?this._isLiked=!1:this._isLiked=!0};_isLiked(){return this._isLiked}_renderLikes(e){this._isLiked?e.classList.add("cards__like-button_active"):e.classList.remove("cards__like-button_active")}setIsLiked(e,t){this._isLiked=e,this._renderLikes(t)}deleteCard(e){e.remove(),e=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".cards__like-button"),this._cardImageEl=this._cardElement.querySelector(".cards__image"),this._cardTitleEl=this._cardElement.querySelector(".cards__image-title"),this._setEventListeners(),this._renderLikes(this._likeButton),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardElement.id=this._id,this._cardElement}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputElements=[...this._formElement.querySelectorAll(this._settings.inputSelector)],this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._settings.inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._settings.inactiveButtonClass),this._submitButton.disabled=!0}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():this._enableButton()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetFormValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),this._setEventListeners()}close(){this._popupElement.classList.remove("modal_opened"),this._removeEventListeners()}_setEventListeners(){document.addEventListener("keydown",this.handleEscClose),this._popupElement.addEventListener("mousedown",this.handleClickOverlay),this._closeButton.addEventListener("mousedown",this.handleCloseButton)}_removeEventListeners(){document.removeEventListener("keydown",this.handleEscClose),this._popupElement.removeEventListener("mousedown",this.handleClickOverlay),this._closeButton.removeEventListener("mousedown",this.handleCloseButton)}handleEscClose=e=>{"Escape"===e.key&&this.close()};handleClickOverlay=e=>{e.target.classList.contains("modal")&&this.close()};handleCloseButton=()=>{this.close()}}class i extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputFields=[...this._popupElement.querySelectorAll(".modal__input")],this._submitButton=this._popupForm.querySelector(".modal__button")}_getInputValues(){const e={};return this._inputFields.forEach((t=>{e[t.name]=t.value})),e}open(){super.open(),this._popupForm.addEventListener("submit",this.handleSubmitListener)}close(){super.close(),this._popupForm.removeEventListener("submit",this.handleSubmitListener)}handleSubmitListener=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())};renderLoading(){this._submitButton.textContent="Saving..."}resetButton(e){this._submitButton.textContent=e}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},n=document.querySelector(".profile__edit-button"),o=document.querySelector("[name='name']"),a=document.querySelector("[name='title']"),l=document.forms["profile-form"],d=document.querySelector(".profile__add-button"),h=document.forms["add-card-form"],c=document.querySelector(".profile__image"),_=document.forms["profile-picture-form"];document.querySelector("#delete-card-modal").querySelector(".modal__form");const u=new class{constructor(e){this._options=e}_processResponse=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`);getInitialCards(){return fetch(`${this._options.baseUrl}/cards`,{headers:this._options.headers}).then(this._processResponse)}getUserInfo(){return fetch(`${this._options.baseUrl}/users/me`,{headers:this._options.headers}).then(this._processResponse)}saveUserData(e){let{name:t,about:s}=e;return fetch(`${this._options.baseUrl}/users/me`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:t,about:s})}).then(this._processResponse)}saveUserImage(e){let{avatar:t}=e;return fetch(`${this._options.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({avatar:t})}).then(this._processResponse)}addNewCard(e,t){return fetch(`${this._options.baseUrl}/cards`,{method:"POST",headers:this._options.headers,body:JSON.stringify({name:e,link:t})}).then(this._processResponse)}deleteCard(e){return fetch(`${this._options.baseUrl}/cards/${e}`,{method:"DELETE",headers:this._options.headers}).then(this._processResponse)}addLike(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._options.headers}).then(this._processResponse)}deleteLike(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._options.headers}).then(this._processResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"cb2e37e6-748b-43dc-a993-c3836c3f06a0","Content-Type":"application/json"}});u.getInitialCards().then((e=>{e.forEach((e=>{p.renderItems(e)}))})).catch((e=>{console.error(e)})),u.getUserInfo().then((e=>{m.setUserInfo(e.name,e.about),m.setAvatar(e.avatar)})).catch((e=>{console.error(e)}));const m=new class{constructor(e){let{profileName:t,profileTitle:s,profileImage:i}=e;this._profileName=document.querySelector(t),this._profileTitle=document.querySelector(s),this._profilePicture=document.querySelector(i)}getUserInfo(){return this._profileInfo={name:this._profileName.textContent,title:this._profileTitle.textContent,avatar:this._profilePicture.src},this._profileInfo}setUserInfo(e,t){this._profileName.textContent=e,this._profileTitle.textContent=t}setAvatar(e){this._profilePicture.src=e}}({profileName:".profile__title",profileTitle:".profile__subtitle",profileImage:".profile__image"}),p=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){const t=this._renderer(e);this._container.append(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:t=>new e(t,"#cards__card",I,C,B).getView()},".cards"),E=new e({},"#cards__card",I,C,B),f=new t(r,h),v=new t(r,l),L=new t(r,_);f.enableValidation(),v.enableValidation(),L.enableValidation();const b=new i("#add-card-modal",(e=>{b.renderLoading(),u.addNewCard(e.title,e.url).then((e=>p.addItem(e))).then((()=>{h.reset(),f.resetFormValidation(),b.close()})).catch((e=>{console.error(e)})).finally((()=>b.resetButton("Create")))})),S=new i("#profile-edit-modal",(e=>{S.renderLoading(),u.saveUserData({name:e.name,about:e.title}).then((()=>u.getUserInfo())).then((e=>{m.setUserInfo(e.name,e.about),l.reset(),S.close()})).catch((e=>{console.error(e)})).finally((()=>S.resetButton("Save")))})),g=new i("#profile-picture-modal",(e=>{g.renderLoading(),u.saveUserImage({avatar:e.url}).then((()=>u.getUserInfo())).then((e=>{m.setAvatar(e.avatar),_.reset(),L.resetFormValidation(),g.close()})).catch((e=>{console.error(e)})).finally((()=>g.resetButton("Save")))})),k=new class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupForm.querySelector(".modal__button")}open(e){super.open(),this._popupForm.addEventListener("submit",this.handleSubmitListener),this._element=e}close(){super.close(),this._popupForm.removeEventListener("submit",this.handleSubmitListener)}handleSubmitListener=e=>{e.preventDefault(),this._handleFormSubmit(this._element)};renderLoading(){this._submitButton.textContent="Removing Card..."}resetButton(){this._submitButton.textContent="Yes"}}("#delete-card-modal",(e=>{k.renderLoading(),u.deleteCard(e.id).then((()=>{E.deleteCard(e),k.close()})).catch((e=>{console.error(e)})).finally((()=>k.resetButton()))})),y=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__open-picture"),this._imageTitle=this._popupElement.querySelector(".modal__footer")}open(e,t,s){this._image.src=e,this._image.alt=t,this._imageTitle.textContent=s,super.open()}}("#open-picture-modal");function C(e){k.open(e)}function I(e,t,s){y.open(e,t,s)}function B(e,t,s){e?u.deleteLike(t).then((e=>{E.setIsLiked(e.isLiked,s)})).catch((e=>{console.error(e)})):u.addLike(t).then((e=>{E.setIsLiked(e.isLiked,s)})).catch((e=>{console.error(e)}))}n.addEventListener("click",(()=>{!function(){const e=m.getUserInfo();o.value=e.name,a.value=e.title}(),v.resetFormValidation(),S.open()})),d.addEventListener("click",(()=>b.open())),c.addEventListener("click",(()=>g.open()))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,